⁜ TypeScript
enum API_STATUS {
  PENDDING,
  FULFILLED,
  ReJECTED, // promise
}

const handle = (mess: string): void => {};

function unionType(a: number | string , b: number) {} // a: union type

type aType = number | string; // alias type
function aliasType(a: aType , b: number) {} 

⁜ ReactJs
const  course = ({ course }) =>() // ({ course }): là destructuring

function App() {
	return (
		<div></div>
	)
} // component 

function Prop(props) {
	return {
		<div class={props.className}></div>
	}	
} 

function App() {
	return {
		<Prop class="prop_class" /> // props
	}	
} 

function Button (title,...href,onclick) {
	let Component = "button"	
	const props = {}

	if(href) {
		Component = 'a'
		props.href = href
	}
	if(onCLick) {
		props.onClick = onClick
	}

	return (
		<Component {...props} >{title}</Component>	// ...props: là spread
	)
		
}

function App() {
	return {
		<Button 
			title = "click me"
			href = "abc.com"
			alt="abc"
		 />
	}	
} 

⁜ NextJs
import { useRouter } from "next/navigation";
const router = useRouter();
  const handleBtn = () => {
    router.push("/");
  }; // quay lại trang chủ


